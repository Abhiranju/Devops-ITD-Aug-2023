To practice - (install git or MobaXterm)

Create a Linux machine in AWS cloud 

1. Create an AWS account 
2. wait for the account to get activated 
3. Search for EC2 service -> Goto Instances -> Launch Instances 
	a. Give a name to the machine (instance)
	b. Choose the OS type (AMI type)
	c. Create and save the Key Pair to login 
4. Create an instance 

In Linux commands are case-sensitive 

A folder is called a Directory in Linux

Know your current path/location 
    pwd - present working directory 

To list files and directories 
     command: ls 
     To list with details (long format): ls -l
     To list with creation time sorted (recent at the top): ls -t
     To list reverse order: ls -r
     All the above together: ls -lrt (OR) ll
       
switch/change to a folder/Directory in Linux (change directory - cd)
    command: cd  
    Syntax: cd <path>/<location>
    example: 1. To change to a Directory in the current location
    		cd test 

create a directory/folder in Linux (make directory - mkdir)
    command: mkdir 
    To create a directory: mkdir <directory_name>
    		example: mkdir test
    To create multiple directories: mkdir <directory_name> <directory_name1> <directory_name2> ..... <directory_name>
    		note: directory names with space separated	
    		example: mkdir test test1 test2 ...	

Delete files/directories (rm)

Use the rm command to delete files and directories. But rm cannot simply delete a directory. Use “rm -r” to delete a directory. In this case, it deletes both the folder and the files in it.
     To remove/delete a file 	
	rm file_name 
     To remove/delete a Directory	
	rm -r directory

Linux path 
  Always Linux path is separate with / 	
   . -> current directory 
   .. -> one step back / Previous one directory 
   ../.. -> Previous two directory

To create an empty file (touch)
    if the file does not exist, the touch command will create an empty file.
    If the file already exists, the touch command will alter the file timestamp to recent.
	touch <file_name>
To display/print the contents of files (cat)
	cat command (short for “concatenate“) allows us to create single or multiple files, view contain
	of a file, concatenate files, and redirect output in the terminal or files.
		cat <file_name>

Vi Editor 
	vi <file_name>

	Command Mode  
		- We can't add any content. This is used to run vi related commands. 
		- Initially when we do vi to a file command mode is the default mode.
	Insert -  esc+i
        exit  - esc+:wq!
		Only Save the changes to the file -  ':w'
		To quit from vi - ':q!'
		Save and quit from vi - ':wq!' or (<escape> - Hold shift + zz)
		Save to another file - ':w <new_file>'

		To search a word - '/<word>'

		To display line numbers - ':set nu'

		To replace word - %s/<old_word>/<new_word>/g

		dd - Cut the entire line where the cursor is - command mode
		yy - copy the entire line where the cursor is - command mode
		p - Paste the clip-board content next to the cursor - command mode

	Insert Mode 
		- Is used to add the content to the file.
 		- Press 'i' to enter to insert mode 
 		- Press '<escape>' to exit insert mode and move to command mode.

tail 
tail -n n file.txt 
The tail command, as the name implies, prints the last N number of lines of the given input. By default, it prints the last 10 lines of the specified files.
	# Prints last 5 lines of file.txt
		tail -n 5 file.txt (or) tail -5 file.txt 

head
head -n n file.txt 
The head command, as the name implies, prints the first N number of lines of the given input. By default, it prints the first 10 lines of the specified files.
	# Prints first 5 lines of file.txt
		head -n 5 file.txt (or) head -5 file.txt 

sort
	The sort command accepts input from a text-based file and outputs alphabetically sorted results to the screen.
		sort file.txt
	
	1. You can reverse the order of the sort with the -r option.
		sort -r file.txt
	2. The -f option forces the sort to ignore the case of a letter when ordering lines.
		sort -f file.txt
	3. Duplicate lines can be removed with the -u option (uniq)
		sort -u file.txt
	4. Number based sorting with the -n option
		sort -n file.txt

uniq 

The uniq command accepts input from a text-based file and removes any repeated lines, only if they are adjacent to each other. That’s why it’s used in conjunction with sort to remove non-adjacent lines.
sort file.txt | uniq
